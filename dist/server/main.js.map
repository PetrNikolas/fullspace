{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/features/contact/contact.module.ts","webpack:///./src/app/features/contact/pages/contact.component.html","webpack:///./src/app/features/contact/pages/contact.component.ts","webpack:///./src/app/features/welcome/pages/welcome.component.html","webpack:///./src/app/features/welcome/pages/welcome.component.ts","webpack:///./src/app/features/welcome/welcome.module.ts","webpack:///./src/app/global-error-handler.ts","webpack:///./src/app/preloading-strategy.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"rxjs\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\n// ------------------------------------------------------------------------------\n// Import components/pages\n// ------------------------------------------------------------------------------\nimport { WelcomeComponent } from \"./features/welcome/pages/welcome.component\";\nimport { ContactComponent } from \"./features/contact/pages/contact.component\";\n\n// ------------------------------------------------------------------------------\n// Import custom preload strategy\n// ------------------------------------------------------------------------------\nimport { SelectivePreloadingStrategy } from \"./preloading-strategy\";\n\n// ------------------------------------------------------------------------------\n// Import environments\n// ------------------------------------------------------------------------------\nimport { environment } from \"../environments/environment\";\n\n// -----------------------------------------------------------------------------\n// Route Configuration\n// ------------------------------------------------------------------------------\nconst routes: Routes = [\n  { path: \"\", component: WelcomeComponent, pathMatch: \"full\" },\n  { path: \"contact\", component: ContactComponent, data: { preload: true } }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      enableTracing: environment.production ? false : true,\n      preloadingStrategy: SelectivePreloadingStrategy\n    })\n  ],\n  providers: [SelectivePreloadingStrategy],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<!-- Nav-->\n<app-header></app-header>\n\n<!-- Main Content-->\n<main>\n    <!-- Router Outlet -->\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer -->\n<app-footer></app-footer>\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"]\n})\nexport class AppComponent {}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule, ErrorHandler } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// ------------------------------------------------------------------------------\n// Import Modules\n// ------------------------------------------------------------------------------\nimport { CoreModule } from \"./core/core.module\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { WelcomeModule } from \"./features/welcome/welcome.module\";\nimport { ContactModule } from \"./features/contact/contact.module\";\n\n// ------------------------------------------------------------------------------\n// Import Routings\n// ------------------------------------------------------------------------------\nimport { AppRoutingModule } from \"./app-routing.module\";\n\n// ------------------------------------------------------------------------------\n// Import global error handling\n// ------------------------------------------------------------------------------\nimport { GlobalErrorHandler } from \"./global-error-handler\";\n\n// ------------------------------------------------------------------------------\n// Import Components\n// ------------------------------------------------------------------------------\nimport { AppComponent } from \"./app.component\";\n\n// ------------------------------------------------------------------------------\n// Import SSR components\n// ------------------------------------------------------------------------------\nimport { PLATFORM_ID, APP_ID, Inject } from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\n\n// ------------------------------------------------------------------------------\n// Import environments\n// ------------------------------------------------------------------------------\nimport { environment } from \"../environments/environment\";\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: \"marleyapp\" }),\n    FormsModule,\n    AppRoutingModule,\n    SharedModule,\n    CoreModule,\n    WelcomeModule,\n    ContactModule,\n    HttpClientModule\n  ],\n  declarations: [AppComponent],\n  providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandler }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_ID) private appId: string\n  ) {\n    if (!environment.production) {\n      const platform = isPlatformBrowser(platformId)\n        ? \"in the browser\"\n        : \"on the server\";\n      console.log(`Running ${platform} with appId=${appId}`);\n    }\n  }\n}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule } from \"@angular/core\";\nimport { ServerModule } from \"@angular/platform-server\";\nimport { ModuleMapLoaderModule } from \"@nguniversal/module-map-ngfactory-loader\";\n\n// ------------------------------------------------------------------------------\n// Import App module and component\n// ------------------------------------------------------------------------------\nimport { AppModule } from \"./app.module\";\nimport { AppComponent } from \"./app.component\";\n\n@NgModule({\n  imports: [AppModule, ServerModule, ModuleMapLoaderModule],\n  providers: [\n    // Add universal-only providers here\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppServerModule {}\n","// ------------------------------------------------------------------------------\n// Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  providers: []\n})\nexport class CoreModule {\n  /* Make sure CoreModule is imported only by one NgModule the AppModule */\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import only in AppModule\");\n    }\n  }\n}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { RouterModule } from \"@angular/router\";\n\n// ------------------------------------------------------------------------------\n// Import pages\n// ------------------------------------------------------------------------------\nimport { ContactComponent } from \"./pages/contact.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, HttpModule],\n  declarations: [ContactComponent],\n  providers: []\n})\nexport class ContactModule {}\n","<!-- Hero-->\n<section class=\"hero is-fullheight has-text-centered\">\n    <!-- Hero-body -->\n    <div class=\"hero-body\">\n        <!-- Container -->\n        <div class=\"container\">\n            <h1 class=\"title is-1\">\n                <span>Contact</span>\n            </h1>\n\n            <div *ngIf=\"persons\" class=\"row\">\n                <div class=\"columns is-multiline is-tablet\">\n                    <div *ngFor=\"let person of persons\" class=\"column is-6-tablet\">\n                        <div class=\"card\">\n                            <div class=\"card-image\">\n                                <figure class=\"image is-2by1\">\n                                <img src=\"{{person.big_image}}\" alt=\"Placeholder image\">\n                                </figure>\n                            </div>\n                            <div class=\"card-content\">\n                                <div class=\"media\">\n                                <div class=\"media-left\">\n                                    <figure class=\"image is-48x48\">\n                                    <img src=\"{{person.small_image}}\" alt=\"Placeholder image\">\n                                    </figure>\n                                </div>\n                                <div class=\"media-content\">\n                                    <p class=\"title is-4\">{{person.name}}</p>\n                                    <p class=\"subtitle is-6\">{{person.nickname}}</p>\n                                </div>\n                                </div>\n\n                                <div class=\"content\">\n                                    {{person.description}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- End Container -->\n    </div>\n    <!-- End Hero-body -->\n</section>\n<!-- End Section -->","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Component, OnInit } from \"@angular/core\";\nimport { Meta, Title } from \"@angular/platform-browser\";\n\n// ------------------------------------------------------------------------------\n// Import custom preload strategy\n// ------------------------------------------------------------------------------\nimport { SelectivePreloadingStrategy } from \"../../../preloading-strategy\";\n\nexport interface Person {\n  id: number;\n  name: string;\n  nickname: string;\n  big_image: string;\n  small_image: string;\n  description: string;\n}\n\n@Component({\n  selector: \"app-contact\",\n  templateUrl: \"contact.component.html\",\n  styleUrls: [\"contact.component.scss\"],\n  providers: []\n})\nexport class ContactComponent implements OnInit {\n  modules: string[];\n\n  persons: Array<Person> = [\n    {\n      id: 1,\n      name: 'John Smith',\n      nickname: '@johnsmith',\n      big_image: 'https://bulma.io/images/placeholders/1280x960.png',\n      small_image: 'https://bulma.io/images/placeholders/96x96.png',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.'\n    },\n    {\n      id: 2,\n      name: 'John Smith',\n      nickname: '@johnsmith',\n      big_image: 'https://bulma.io/images/placeholders/1280x960.png',\n      small_image: 'https://bulma.io/images/placeholders/96x96.png',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.'\n    }\n  ]\n\n  constructor(\n    meta: Meta,\n    title: Title,\n    private preloadStrategy: SelectivePreloadingStrategy\n  ) {\n    this.modules = preloadStrategy.preloadedModules;\n\n    // Sets the <title></title>\n    title.setTitle(\"Contact\");\n\n    // Sets the <meta> tag for the page\n    meta.addTags([\n      { name: \"author\", content: \"Petr Nikolas\" },\n      { name: \"description\", content: \"This is a contact page.\" }\n    ]);\n  }\n\n  ngOnInit() {}\n}\n","<!-- Hero-->\n<section class=\"hero is-fullheight has-text-centered\">\n    <!-- Hero-body -->\n    <div class=\"hero-body\">\n        <!-- Container -->\n        <div class=\"container\">\n\n            <h1 class=\"title is-1\">\n                <span>Marley.js!</span>\n            </h1>\n            <h2 class=\"title is-2\">Modern Angular 6+ Stack.</h2>\n            <a id=\"button\" href=\"https://github.com/PetrNikolas/marley\" target=\"_blank\" class=\"button is-primary is-medium\">Download!</a>\n\n        </div>\n        <!-- End Container -->\n    </div>\n    <!-- End Hero-body -->\n</section>\n<!-- End Section -->","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Component, OnInit } from \"@angular/core\";\nimport { Meta, Title } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-welcome\",\n  templateUrl: \"./welcome.component.html\",\n  styleUrls: [\"./welcome.component.scss\"]\n})\nexport class WelcomeComponent implements OnInit {\n  constructor(meta: Meta, title: Title) {\n    // Sets the <title></title>\n    title.setTitle(\"Home\");\n\n    // Sets the <meta> tag for the page\n    meta.addTags([\n      { name: \"author\", content: \"Petr Nikolas\" },\n      { name: \"description\", content: \"This is a home page.\" }\n    ]);\n  }\n\n  ngOnInit() {}\n}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\n\n// ------------------------------------------------------------------------------\n// Import pages\n// ------------------------------------------------------------------------------\nimport { WelcomeComponent } from \"./pages/welcome.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, HttpModule],\n  declarations: [WelcomeComponent]\n})\nexport class WelcomeModule {}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { ErrorHandler, Injectable, forwardRef, Inject } from \"@angular/core\";\nimport { LocationStrategy, PathLocationStrategy } from \"@angular/common\";\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor() {}\n\n  handleError(error) {\n    const message = error.message ? error.message : error.toString();\n    const url = window.location.href;\n    console.log(\"URL: \" + url + \"/ MESSAGE: \" + message);\n    throw error;\n  }\n}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Injectable } from \"@angular/core\";\nimport { PreloadingStrategy, Route } from \"@angular/router\";\n\n// ------------------------------------------------------------------------------\n// Import RxJS\n// ------------------------------------------------------------------------------\nimport { Observable, of } from \"rxjs\";\n\n@Injectable()\nexport class SelectivePreloadingStrategy implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: Function): Observable<any> {\n    return route.data && route.data.preload ? load() : of(null);\n  }\n}\n","<!-- Footer -->\n<footer class=\"footer\">\n    <!-- Container -->\n    <div class=\"container\">\n        <!-- Content -->\n        <div class=\"content has-text-centered\">\n            <p>\n                <strong><a href=\"https://github.com/PetrNikolas/marley\">Marley</a></strong> by <a href=\"http://www.petrnikolas.com/\">Petr Nikolas</a>.\n            </p>\n        </div>\n        <!-- End Content -->\n    </div>\n    <!-- End Container -->\n</footer>\n<!-- End Footer -->","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n  styleUrls: [\"footer.component.scss\"]\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"navbar-menu\">\n  <div class=\"navbar-start\">\n    <!-- navbar items -->\n    <a class=\"navbar-item is-brand\" [routerLink]=\"['/']\">Marley.js</a>\n  </div>\n\n  <div class=\"navbar-end\">\n    <!-- navbar items -->\n    <a class=\"navbar-item\" [routerLink]=\"['/contact']\" [routerLinkActive]=\"['is-active']\">Contact</a>\n  </div>\n</div>","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"header.component.html\",\n  styleUrls: [\"header.component.scss\"]\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// ------------------------------------------------------------------------------\n// Import Angular libs\n// ------------------------------------------------------------------------------\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\n\n// ------------------------------------------------------------------------------\n// Import components\n// ------------------------------------------------------------------------------\nimport { FooterComponent } from \"./footer/footer.component\";\nimport { HeaderComponent } from \"./header/header.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [FooterComponent, HeaderComponent],\n  exports: [FooterComponent, HeaderComponent]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// ------------------------------------------------------------------------------\n// Export server module\n// ------------------------------------------------------------------------------\nexport { AppServerModule } from \"./app/app.server.module\";\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"rxjs\");"],"sourceRoot":""}